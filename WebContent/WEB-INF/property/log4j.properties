### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L ==>%m%n

log4j.appender.customOut=org.apache.log4j.ConsoleAppender
log4j.appender.customOut.Target=System.out
log4j.appender.customOut.layout=org.apache.log4j.PatternLayout

### direct messages to file hibernate.log ###
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=/home/stark/FileStore/LogStore/stark
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.DatePattern =  '_'yyyy-MM-dd-HH'.log'
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L ==>%m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###

  
log4j.appender.WriterAppender=org.apache.log4j.WriterAppender  
log4j.appender.WriterAppender.Threshold=debug  
log4j.appender.WriterAppender.layout=org.apache.log4j.PatternLayout  
log4j.appender.WriterAppender.layout.ConversionPattern=%d{ABSOLUTE} - %p - %m%n  


log4j.rootLogger=info, stdout,file
#log4j.logger.Log4jMain =  INFO,WriterAppender
#log4j.logger.com.stark.web.aop.LogInterceptor = info,stdout,file
#log4j.logger.custom = info,customOut
#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
log4j.logger.org.hibernate.cache=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
