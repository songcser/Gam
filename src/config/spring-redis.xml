<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- scanner redis properties -->
	<context:property-placeholder order="1" location="/WEB-INF/property/redis.properties" ignore-unresolvable="true" />

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
    

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
		<constructor-arg ref="poolConfig" />
		<constructor-arg>
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg value="${redis.host}" />
					<constructor-arg type="int" value="${redis.port}" />
					<constructor-arg value="instance:01" />
					<!-- <property name="password" value="${redis.pass}"></property>-->
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg value="${redis2.host}" />
                    <constructor-arg type="int" value="${redis2.port}" />
                    <constructor-arg value="instance:02" />
                   <!--  <property name="password" value="${redis2.pass}"></property> -->
                </bean>
			</list>
		</constructor-arg>
	</bean>
	
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
       p:host-name="${redis.host}" 
       p:port="${redis.port}" 
       p:pool-config-ref="poolConfig" />
<!--        p:password="${redis.pass}" -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />

		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>

		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>

	</bean>
	<!-- <bean id="redisManager" class="com.stark.web.service.RedisManager"> <property name="redisTemplate" ref="redisTemplate" /> </bean> -->
	
	<bean id="jedisPool" class="com.wandoulabs.jodis.RoundRobinJedisPool" >
	   <constructor-arg value="127.0.0.1:2181" />
       <constructor-arg type="int" value="30000" />
       <constructor-arg value="/zk/codis/db_test/proxy" />
       <constructor-arg ref="poolConfig" />
	</bean>
	
</beans>
